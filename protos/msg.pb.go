// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v5.26.1
// source: msg.proto

package __

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ZIdentity int32

const (
	ZIdentity_U_TYPE_CLI ZIdentity = 0 // client
	ZIdentity_U_TYPE_SER ZIdentity = 1 // server
)

// Enum value maps for ZIdentity.
var (
	ZIdentity_name = map[int32]string{
		0: "U_TYPE_CLI",
		1: "U_TYPE_SER",
	}
	ZIdentity_value = map[string]int32{
		"U_TYPE_CLI": 0,
		"U_TYPE_SER": 1,
	}
)

func (x ZIdentity) Enum() *ZIdentity {
	p := new(ZIdentity)
	*p = x
	return p
}

func (x ZIdentity) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ZIdentity) Descriptor() protoreflect.EnumDescriptor {
	return file_msg_proto_enumTypes[0].Descriptor()
}

func (ZIdentity) Type() protoreflect.EnumType {
	return &file_msg_proto_enumTypes[0]
}

func (x ZIdentity) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ZIdentity.Descriptor instead.
func (ZIdentity) EnumDescriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{0}
}

type ZAction int32

const (
	ZAction_Z_TYPE_READ  ZAction = 0 // read
	ZAction_Z_TYPE_WRITE ZAction = 1 // write
)

// Enum value maps for ZAction.
var (
	ZAction_name = map[int32]string{
		0: "Z_TYPE_READ",
		1: "Z_TYPE_WRITE",
	}
	ZAction_value = map[string]int32{
		"Z_TYPE_READ":  0,
		"Z_TYPE_WRITE": 1,
	}
)

func (x ZAction) Enum() *ZAction {
	p := new(ZAction)
	*p = x
	return p
}

func (x ZAction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ZAction) Descriptor() protoreflect.EnumDescriptor {
	return file_msg_proto_enumTypes[1].Descriptor()
}

func (ZAction) Type() protoreflect.EnumType {
	return &file_msg_proto_enumTypes[1]
}

func (x ZAction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ZAction.Descriptor instead.
func (ZAction) EnumDescriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{1}
}

type ZPushType int32

const (
	ZPushType_Z_TYPE_DM ZPushType = 0 // direct msg
	ZPushType_Z_TYPE_BC ZPushType = 1 // broadcast
)

// Enum value maps for ZPushType.
var (
	ZPushType_name = map[int32]string{
		0: "Z_TYPE_DM",
		1: "Z_TYPE_BC",
	}
	ZPushType_value = map[string]int32{
		"Z_TYPE_DM": 0,
		"Z_TYPE_BC": 1,
	}
)

func (x ZPushType) Enum() *ZPushType {
	p := new(ZPushType)
	*p = x
	return p
}

func (x ZPushType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ZPushType) Descriptor() protoreflect.EnumDescriptor {
	return file_msg_proto_enumTypes[2].Descriptor()
}

func (ZPushType) Type() protoreflect.EnumType {
	return &file_msg_proto_enumTypes[2]
}

func (x ZPushType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ZPushType.Descriptor instead.
func (ZPushType) EnumDescriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{2}
}

type ZType int32

const (
	ZType_Z_TYPE_RNG     ZType = 0
	ZType_Z_TYPE_EVENT   ZType = 1
	ZType_Z_TYPE_CLOCK   ZType = 2
	ZType_Z_TYPE_GATEWAY ZType = 3
)

// Enum value maps for ZType.
var (
	ZType_name = map[int32]string{
		0: "Z_TYPE_RNG",
		1: "Z_TYPE_EVENT",
		2: "Z_TYPE_CLOCK",
		3: "Z_TYPE_GATEWAY",
	}
	ZType_value = map[string]int32{
		"Z_TYPE_RNG":     0,
		"Z_TYPE_EVENT":   1,
		"Z_TYPE_CLOCK":   2,
		"Z_TYPE_GATEWAY": 3,
	}
)

func (x ZType) Enum() *ZType {
	p := new(ZType)
	*p = x
	return p
}

func (x ZType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ZType) Descriptor() protoreflect.EnumDescriptor {
	return file_msg_proto_enumTypes[3].Descriptor()
}

func (ZType) Type() protoreflect.EnumType {
	return &file_msg_proto_enumTypes[3]
}

func (x ZType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ZType.Descriptor instead.
func (ZType) EnumDescriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{3}
}

type Zp2P struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version   uint32    `protobuf:"varint,1,opt,name=version,proto3" json:"version,omitempty"`
	Type      ZIdentity `protobuf:"varint,2,opt,name=type,proto3,enum=message.ZIdentity" json:"type,omitempty"`                         // for p2p
	Action    ZAction   `protobuf:"varint,3,opt,name=action,proto3,enum=message.ZAction" json:"action,omitempty"`                       // for p2p
	PushType  ZPushType `protobuf:"varint,4,opt,name=push_type,json=pushType,proto3,enum=message.ZPushType" json:"push_type,omitempty"` // for vlc
	Message   *ZMessage `protobuf:"bytes,5,opt,name=message,proto3" json:"message,omitempty"`
	PublicKey []byte    `protobuf:"bytes,6,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
	Signature []byte    `protobuf:"bytes,7,opt,name=signature,proto3" json:"signature,omitempty"` // for verifying
}

func (x *Zp2P) Reset() {
	*x = Zp2P{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Zp2P) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Zp2P) ProtoMessage() {}

func (x *Zp2P) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Zp2P.ProtoReflect.Descriptor instead.
func (*Zp2P) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{0}
}

func (x *Zp2P) GetVersion() uint32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *Zp2P) GetType() ZIdentity {
	if x != nil {
		return x.Type
	}
	return ZIdentity_U_TYPE_CLI
}

func (x *Zp2P) GetAction() ZAction {
	if x != nil {
		return x.Action
	}
	return ZAction_Z_TYPE_READ
}

func (x *Zp2P) GetPushType() ZPushType {
	if x != nil {
		return x.PushType
	}
	return ZPushType_Z_TYPE_DM
}

func (x *Zp2P) GetMessage() *ZMessage {
	if x != nil {
		return x.Message
	}
	return nil
}

func (x *Zp2P) GetPublicKey() []byte {
	if x != nil {
		return x.PublicKey
	}
	return nil
}

func (x *Zp2P) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

// ZMessage
type ZMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        []byte `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Version   uint32 `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"`
	Type      ZType  `protobuf:"varint,3,opt,name=type,proto3,enum=message.ZType" json:"type,omitempty"`
	PublicKey []byte `protobuf:"bytes,4,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
	Data      []byte `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
	Signature []byte `protobuf:"bytes,6,opt,name=signature,proto3" json:"signature,omitempty"`
	From      []byte `protobuf:"bytes,7,opt,name=from,proto3" json:"from,omitempty"`
	To        []byte `protobuf:"bytes,8,opt,name=to,proto3" json:"to,omitempty"`
}

func (x *ZMessage) Reset() {
	*x = ZMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ZMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ZMessage) ProtoMessage() {}

func (x *ZMessage) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ZMessage.ProtoReflect.Descriptor instead.
func (*ZMessage) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{1}
}

func (x *ZMessage) GetId() []byte {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *ZMessage) GetVersion() uint32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *ZMessage) GetType() ZType {
	if x != nil {
		return x.Type
	}
	return ZType_Z_TYPE_RNG
}

func (x *ZMessage) GetPublicKey() []byte {
	if x != nil {
		return x.PublicKey
	}
	return nil
}

func (x *ZMessage) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ZMessage) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

func (x *ZMessage) GetFrom() []byte {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *ZMessage) GetTo() []byte {
	if x != nil {
		return x.To
	}
	return nil
}

var File_msg_proto protoreflect.FileDescriptor

var file_msg_proto_rawDesc = []byte{
	0x0a, 0x09, 0x6d, 0x73, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x22, 0x8d, 0x02, 0x0a, 0x04, 0x5a, 0x70, 0x32, 0x70, 0x12, 0x18, 0x0a,
	0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e,
	0x5a, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x28, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x10, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x5a, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2f, 0x0a, 0x09, 0x70, 0x75, 0x73,
	0x68, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x5a, 0x50, 0x75, 0x73, 0x68, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x08, 0x70, 0x75, 0x73, 0x68, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2b, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x5a, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x75, 0x62, 0x6c, 0x69,
	0x63, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x70, 0x75, 0x62,
	0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x22, 0xcd, 0x01, 0x0a, 0x08, 0x5a, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x2e, 0x5a, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x1d, 0x0a, 0x0a, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x12, 0x12,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04,
	0x66, 0x72, 0x6f, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x02, 0x74, 0x6f, 0x2a, 0x2b, 0x0a, 0x09, 0x5a, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x12, 0x0e, 0x0a, 0x0a, 0x55, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x43, 0x4c, 0x49, 0x10,
	0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x55, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x53, 0x45, 0x52, 0x10,
	0x01, 0x2a, 0x2c, 0x0a, 0x07, 0x5a, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0f, 0x0a, 0x0b,
	0x5a, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x52, 0x45, 0x41, 0x44, 0x10, 0x00, 0x12, 0x10, 0x0a,
	0x0c, 0x5a, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x57, 0x52, 0x49, 0x54, 0x45, 0x10, 0x01, 0x2a,
	0x29, 0x0a, 0x09, 0x5a, 0x50, 0x75, 0x73, 0x68, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0d, 0x0a, 0x09,
	0x5a, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x44, 0x4d, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x5a,
	0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x42, 0x43, 0x10, 0x01, 0x2a, 0x4f, 0x0a, 0x05, 0x5a, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x0a, 0x5a, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x52, 0x4e,
	0x47, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x5a, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x45, 0x56,
	0x45, 0x4e, 0x54, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x5a, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x43, 0x4c, 0x4f, 0x43, 0x4b, 0x10, 0x02, 0x12, 0x12, 0x0a, 0x0e, 0x5a, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x47, 0x41, 0x54, 0x45, 0x57, 0x41, 0x59, 0x10, 0x03, 0x42, 0x04, 0x5a, 0x02, 0x2e,
	0x2f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_msg_proto_rawDescOnce sync.Once
	file_msg_proto_rawDescData = file_msg_proto_rawDesc
)

func file_msg_proto_rawDescGZIP() []byte {
	file_msg_proto_rawDescOnce.Do(func() {
		file_msg_proto_rawDescData = protoimpl.X.CompressGZIP(file_msg_proto_rawDescData)
	})
	return file_msg_proto_rawDescData
}

var file_msg_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_msg_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_msg_proto_goTypes = []interface{}{
	(ZIdentity)(0),   // 0: message.ZIdentity
	(ZAction)(0),     // 1: message.ZAction
	(ZPushType)(0),   // 2: message.ZPushType
	(ZType)(0),       // 3: message.ZType
	(*Zp2P)(nil),     // 4: message.Zp2p
	(*ZMessage)(nil), // 5: message.ZMessage
}
var file_msg_proto_depIdxs = []int32{
	0, // 0: message.Zp2p.type:type_name -> message.ZIdentity
	1, // 1: message.Zp2p.action:type_name -> message.ZAction
	2, // 2: message.Zp2p.push_type:type_name -> message.ZPushType
	5, // 3: message.Zp2p.message:type_name -> message.ZMessage
	3, // 4: message.ZMessage.type:type_name -> message.ZType
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_msg_proto_init() }
func file_msg_proto_init() {
	if File_msg_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_msg_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Zp2P); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ZMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_msg_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_msg_proto_goTypes,
		DependencyIndexes: file_msg_proto_depIdxs,
		EnumInfos:         file_msg_proto_enumTypes,
		MessageInfos:      file_msg_proto_msgTypes,
	}.Build()
	File_msg_proto = out.File
	file_msg_proto_rawDesc = nil
	file_msg_proto_goTypes = nil
	file_msg_proto_depIdxs = nil
}
